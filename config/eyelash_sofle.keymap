#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    HMShiftR: HMShiftR {
        compatible = "zmk,behavior-hold-tap";
        label = "HMSHIFTR";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        hold-trigger-key-positions = <0 1 2 3 4 5 18 17 16 15 14 13 26 27 28 29 30 42 43 54 55 44 31 41 53 40 39 56 57 52>;
        hold-while-undecided;
    };

    HMShiftL: HMShiftL {
        compatible = "zmk,behavior-hold-tap";
        label = "HMSHIFTL";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        hold-while-undecided;
        hold-trigger-key-positions = <7 8 9 10 11 12 20 21 22 23 24 25 33 34 35 36 37 38 46 47 48 49 50 51 60 61 62 63 59 6 19 32 45 58>;
    };

    HML: HML {
        compatible = "zmk,behavior-hold-tap";
        label = "HML";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        hold-trigger-on-release;
        hold-while-undecided;
        hold-trigger-key-positions = <7 8 9 10 11 12 20 21 22 23 24 25 33 34 35 36 37 38 46 47 48 49 50 51 60 61 62 63 59 6 19 32 45 58>;
        flavor = "tap-preferred";
    };

    HMR: HMR {
        compatible = "zmk,behavior-hold-tap";
        label = "HMR";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        hold-trigger-key-positions = <0 1 2 3 4 5 18 17 16 15 14 13 26 27 28 29 30 42 43 54 55 44 31 41 53 40 39 56 57 52>;
        hold-trigger-on-release;
        hold-while-undecided;
        flavor = "tap-preferred";
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <14 28 40>;
        };

        Pause {
            bindings = <&kp C_PLAY_PAUSE>;
            key-positions = <34 35>;
            layers = <3>;
        };

        PageDown {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <34 31>;
            layers = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&bl BL_TOG       &kp N1     &kp N2          &kp N3        &kp N4                  &kp N5                &mmv MOVE_UP     &kp N6               &kp N7                   &kp N8     &kp N9           &kp N0    &kp LEFT_BRACKET
&kp CAPS         &kp Q      &kp W           &kp E         &kp R                   &kp T                 &mmv MOVE_DOWN   &kp Y                &kp U                    &kp I      &kp O            &kp P     &kp RIGHT_BRACKET
&kp TAB          &kp A      &mt LEFT_ALT S  &kp D         &HMShiftL LEFT_SHIFT F  &kp G                 &mmv MOVE_LEFT   &kp H                &HMShiftR RIGHT_SHIFT J  &kp K      &mt RIGHT_ALT L  &kp SEMI  &kp APOS
&mt LCTRL GRAVE  &kp Z      &kp X           &kp C         &kp V                   &kp B                 &mmv MOVE_RIGHT  &kp N                &kp M                    &kp COMMA  &kp DOT          &kp FSLH  &kp BACKSLASH
&kp C_MUTE       &kp LCTRL  &kp LEFT_ALT    &lt 1 ESCAPE  &kp BACKSPACE           &mt LEFT_GUI SPACE    &mkp LCLK        &mt RIGHT_GUI SPACE  &kp ENTER                &mo 2      &mo 3            &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        Navigation {
            bindings = <
&kp TILDE     &kp F1        &kp F2        &kp F3       &kp F4  &kp F5         &msc SCRL_UP     &kp F6                       &kp F7    &kp F8        &kp F9     &kp F10       &trans
&bt BT_SEL 0  &kp F11       &kp F12       &trans       &trans  &trans         &msc SCRL_DOWN   &trans                       &trans    &trans        &trans     &kp UNDER     &kp PLUS
&bt BT_SEL 1  &out OUT_USB  &out OUT_BLE  &trans       &trans  &kp PAGE_UP    &msc SCRL_LEFT   &HMR RIGHT_SHIFT LEFT_ARROW  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &kp LBRC      &kp RBRC
&bt BT_SEL 2  &sys_reset    &trans        &bootloader  &trans  &trans         &msc SCRL_RIGHT  &trans                       &trans    &kp COMMA     &kp DOT    &kp QUESTION  &trans
&trans        &trans        &trans        &trans       &trans  &trans         &mkp RCLK        &kp SPACE                    &trans    &trans        &trans     &trans
            >;

            display-name = "layer2";
            sensor-bindings = <&inc_dec_kp C_AL_FILE_BROWSER C_BRIGHTNESS_DEC>;
        };

        Symbols {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8       &kp F9     &kp F10           &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP       &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp UNDERSCORE   &kp KP_MINUS     &kp KP_PLUS  &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp COMMA    &kp DOT    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans       &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans      &trans        &trans        &trans      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans      &trans        &trans        &trans      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans      &trans        &trans        &trans      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans      &trans        &trans        &trans      &trans
            >;

            display-name = "layer3";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "layer4";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
